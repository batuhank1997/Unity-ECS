//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MoveSystemComponent moveSystem { get { return (MoveSystemComponent)GetComponent(GameComponentsLookup.MoveSystem); } }
    public bool hasMoveSystem { get { return HasComponent(GameComponentsLookup.MoveSystem); } }

    public void AddMoveSystem(MoveSystem newValue) {
        var index = GameComponentsLookup.MoveSystem;
        var component = (MoveSystemComponent)CreateComponent(index, typeof(MoveSystemComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveSystem(MoveSystem newValue) {
        var index = GameComponentsLookup.MoveSystem;
        var component = (MoveSystemComponent)CreateComponent(index, typeof(MoveSystemComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveSystem() {
        RemoveComponent(GameComponentsLookup.MoveSystem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMoveSystem;

    public static Entitas.IMatcher<GameEntity> MoveSystem {
        get {
            if (_matcherMoveSystem == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MoveSystem);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMoveSystem = matcher;
            }

            return _matcherMoveSystem;
        }
    }
}
